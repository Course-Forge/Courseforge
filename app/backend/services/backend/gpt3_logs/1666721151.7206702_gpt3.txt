PROMPT:



==========

RESPONSE:

ï»¿using System; using System.Collections; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace CodeWars._6kyu { /* * Counting Duplicates * Write a function that will return the count of distinct case-insensitive alphabetic characters and numeric digits that occur more than once in the input string. * The input string can be assumed to contain only alphanumeric characters, including digits, uppercase and lowercase alphabets. * Example: "abcde" -> 0 # no characters repeats more than once "aabbcde" -> 2 # 'a' and 'b' "aabBcde" -> 2 # 'a' occurs twice and 'b' twice (`b` and `B`) "indivisibility" -> 1 # 'i' occurs six times "Indivisibilities" -> 2 # 'i' occurs seven times and 's' occurs twice "aA11" -> 2 # 'a' and '1' "ABBA" -> 2 # 'A' and 'B' each occur twice */ public class CountingDuplicatesClass { public static int DuplicateCount(string str) { if (str == null || str == "") return 0; Hashtable hashtable = new Hashtable(); foreach (var item in str) { if (!hashtable.ContainsKey(item)) hashtable.Add(item, 1); else hashtable[item] = (int)hashtable[item] + 1; } var count = 0; foreach (DictionaryEntry item in hashtable) if ((int)item.Value > 1) count++; return count; } } }