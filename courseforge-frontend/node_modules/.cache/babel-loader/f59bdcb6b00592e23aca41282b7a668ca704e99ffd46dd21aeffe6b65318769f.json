{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Documents\\\\GitHub\\\\Courseforge\\\\courseforge-frontend\\\\src\\\\components\\\\Dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dropdowns, setDropdowns] = useState([]);\n  const courseRef = useRef([]); // To track newly added courses for fade-in\n\n  // Function to add a new course (accordion)\n  const addDropdown = () => {\n    const newDropdown = {\n      title: `Course ${dropdowns.length + 1}`,\n      content: `This is the content for Course ${dropdowns.length + 1}.`\n    };\n    setDropdowns(prevDropdowns => [...prevDropdowns, newDropdown]);\n  };\n\n  // Use IntersectionObserver to add the 'fade-in' class when elements enter the viewport\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('fade-in');\n        }\n      });\n    }, {\n      threshold: 0.1\n    } // Trigger when 10% of the element is visible\n    );\n    courseRef.current.forEach(element => {\n      if (element) observer.observe(element);\n    });\n    return () => {\n      courseRef.current.forEach(element => {\n        if (element) observer.unobserve(element);\n      });\n    };\n  }, [dropdowns]); // Re-run the effect when new dropdowns are added\n\n  // Handle accordion toggle\n  const toggleAccordion = index => {\n    setDropdowns(prevDropdowns => prevDropdowns.map((dropdown, i) => i === index ? {\n      ...dropdown,\n      isOpen: !dropdown.isOpen\n    } : dropdown));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-course-btn\",\n      onClick: addDropdown,\n      children: \"Add Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), dropdowns.map((dropdown, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => courseRef.current[index] = el // Reference for IntersectionObserver\n      ,\n      className: \"accordion hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion-header ${dropdown.isOpen ? 'active' : ''}`,\n        onClick: () => toggleAccordion(index),\n        children: dropdown.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `accordion-content ${dropdown.isOpen ? 'show' : ''}`,\n        children: dropdown.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"TVqnnRcH4ldcOtcEF43pPIAVHRE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","dropdowns","setDropdowns","courseRef","useRef","addDropdown","newDropdown","title","length","content","prevDropdowns","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","threshold","current","element","observe","unobserve","toggleAccordion","index","map","dropdown","i","isOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","el","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Documents/GitHub/Courseforge/courseforge-frontend/src/components/Dropdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dropdown.css';\r\n\r\nfunction App() {\r\n    const [dropdowns, setDropdowns] = useState([]);\r\n    const courseRef = useRef([]); // To track newly added courses for fade-in\r\n  \r\n    // Function to add a new course (accordion)\r\n    const addDropdown = () => {\r\n      const newDropdown = {\r\n        title: `Course ${dropdowns.length + 1}`,\r\n        content: `This is the content for Course ${dropdowns.length + 1}.`,\r\n      };\r\n      setDropdowns((prevDropdowns) => [...prevDropdowns, newDropdown]);\r\n    };\r\n  \r\n    // Use IntersectionObserver to add the 'fade-in' class when elements enter the viewport\r\n    useEffect(() => {\r\n      const observer = new IntersectionObserver(\r\n        (entries) => {\r\n          entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n              entry.target.classList.add('fade-in');\r\n            }\r\n          });\r\n        },\r\n        { threshold: 0.1 } // Trigger when 10% of the element is visible\r\n      );\r\n  \r\n      courseRef.current.forEach((element) => {\r\n        if (element) observer.observe(element);\r\n      });\r\n  \r\n      return () => {\r\n        courseRef.current.forEach((element) => {\r\n          if (element) observer.unobserve(element);\r\n        });\r\n      };\r\n    }, [dropdowns]); // Re-run the effect when new dropdowns are added\r\n  \r\n    // Handle accordion toggle\r\n    const toggleAccordion = (index) => {\r\n      setDropdowns((prevDropdowns) =>\r\n        prevDropdowns.map((dropdown, i) =>\r\n          i === index ? { ...dropdown, isOpen: !dropdown.isOpen } : dropdown\r\n        )\r\n      );\r\n    };\r\n  \r\n    return (\r\n      <div className=\"app-container\">\r\n        <h1>Courses</h1>\r\n  \r\n        {/* Button to add a new course */}\r\n        <button className=\"add-course-btn\" onClick={addDropdown}>Add Course</button>\r\n  \r\n        {/* Render all dropdowns */}\r\n        {dropdowns.map((dropdown, index) => (\r\n          <div\r\n            key={index}\r\n            ref={(el) => (courseRef.current[index] = el)} // Reference for IntersectionObserver\r\n            className=\"accordion hidden\"\r\n          >\r\n            <div\r\n              className={`accordion-header ${dropdown.isOpen ? 'active' : ''}`}\r\n              onClick={() => toggleAccordion(index)}\r\n            >\r\n              {dropdown.title}\r\n            </div>\r\n            <div className={`accordion-content ${dropdown.isOpen ? 'show' : ''}`}>\r\n              {dropdown.content}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMQ,SAAS,GAAGC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAE,UAAUN,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;MACvCC,OAAO,EAAE,kCAAkCR,SAAS,CAACO,MAAM,GAAG,CAAC;IACjE,CAAC;IACDN,YAAY,CAAEQ,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAEJ,WAAW,CAAC,CAAC;EAClE,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CAAC,CAAC;IACrB,CAAC;IAEDjB,SAAS,CAACkB,OAAO,CAACP,OAAO,CAAEQ,OAAO,IAAK;MACrC,IAAIA,OAAO,EAAEX,QAAQ,CAACY,OAAO,CAACD,OAAO,CAAC;IACxC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXnB,SAAS,CAACkB,OAAO,CAACP,OAAO,CAAEQ,OAAO,IAAK;QACrC,IAAIA,OAAO,EAAEX,QAAQ,CAACa,SAAS,CAACF,OAAO,CAAC;MAC1C,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB;EACA,MAAMwB,eAAe,GAAIC,KAAK,IAAK;IACjCxB,YAAY,CAAEQ,aAAa,IACzBA,aAAa,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEC,CAAC,KAC5BA,CAAC,KAAKH,KAAK,GAAG;MAAE,GAAGE,QAAQ;MAAEE,MAAM,EAAE,CAACF,QAAQ,CAACE;IAAO,CAAC,GAAGF,QAC5D,CACF,CAAC;EACH,CAAC;EAED,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BlC,OAAA;MAAAkC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhBtC,OAAA;MAAQiC,SAAS,EAAC,gBAAgB;MAACM,OAAO,EAAEhC,WAAY;MAAA2B,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG3EnC,SAAS,CAAC0B,GAAG,CAAC,CAACC,QAAQ,EAAEF,KAAK,kBAC7B5B,OAAA;MAEEwC,GAAG,EAAGC,EAAE,IAAMpC,SAAS,CAACkB,OAAO,CAACK,KAAK,CAAC,GAAGa,EAAI,CAAC;MAAA;MAC9CR,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAE5BlC,OAAA;QACEiC,SAAS,EAAE,oBAAoBH,QAAQ,CAACE,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACjEO,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAACC,KAAK,CAAE;QAAAM,QAAA,EAErCJ,QAAQ,CAACrB;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAE,qBAAqBH,QAAQ,CAACE,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;QAAAE,QAAA,EAClEJ,QAAQ,CAACnB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA,GAZDV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaP,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpC,EAAA,CAzEMD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA2EV,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}