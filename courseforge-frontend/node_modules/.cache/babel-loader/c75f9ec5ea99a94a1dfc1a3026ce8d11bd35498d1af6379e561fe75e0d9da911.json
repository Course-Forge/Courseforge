{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Documents\\\\GitHub\\\\Courseforge\\\\courseforge-frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const hasInitialized = useRef(false);\n  useEffect(() => {\n    if (!hasInitialized.current) {\n      addMessage('Hello! How can I assist you today?', 'gpt');\n      hasInitialized.current = true;\n    }\n  }, []);\n  const addMessage = (text, sender) => {\n    setConversation(prevConversation => [...prevConversation, {\n      text,\n      sender\n    }]);\n  };\n  const sendMessage = async () => {\n    if (userInput.trim()) {\n      const newConversation = [...conversation, {\n        text: userInput,\n        sender: 'user'\n      }];\n      setConversation(newConversation);\n      setUserInput('');\n      setIsTyping(true);\n      try {\n        const response = await axios.post('http://127.0.0.1:8000/api/chatbot/', {\n          user_message: userInput\n        });\n        // const formattedResponse = marked(response.data.response);  // Convert Markdown to HTML\n        // addMessage(formattedResponse, 'gpt');\n        addMessage(response.data.response, 'gpt');\n      } catch (error) {\n        if (error.response) {\n          const errorMessage = error.response.status === 401 ? 'Unauthorized: Check your API credentials.' : `Error: ${error.response.data.error}`;\n          addMessage(errorMessage, 'gpt');\n          console.error('Error Response:', error.response.data);\n        } else {\n          addMessage('Error communicating with the server.', 'gpt');\n          console.error('Error:', error.user_message);\n        }\n      } finally {\n        setIsTyping(false);\n      }\n    }\n  };\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"element\", {\n    class: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [conversation.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender === 'gpt' ? 'chat-right' : 'chat-left'}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message chat-right typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message here...\",\n        value: userInput,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"disclaimer\",\n        children: \"CourseForge can make mistakes. Check important info.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"ehl9lEwEJC7y8+xom/lOdP/oIaU=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Chat","_s","conversation","setConversation","userInput","setUserInput","isTyping","setIsTyping","hasInitialized","current","addMessage","text","sender","prevConversation","sendMessage","trim","newConversation","response","post","user_message","data","error","errorMessage","status","console","handleInputChange","event","target","value","handleKeyPress","key","class","children","className","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Documents/GitHub/Courseforge/courseforge-frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\nconst Chat = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const hasInitialized = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasInitialized.current) {\r\n      addMessage('Hello! How can I assist you today?', 'gpt');\r\n      hasInitialized.current = true;\r\n    }\r\n  }, []);\r\n\r\n  const addMessage = (text, sender) => {\r\n    setConversation((prevConversation) => [...prevConversation, { text, sender }]);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (userInput.trim()) {\r\n      const newConversation = [...conversation, { text: userInput, sender: 'user' }];\r\n      setConversation(newConversation);\r\n      setUserInput('');\r\n      setIsTyping(true);\r\n\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:8000/api/chatbot/', { user_message: userInput });\r\n        // const formattedResponse = marked(response.data.response);  // Convert Markdown to HTML\r\n        // addMessage(formattedResponse, 'gpt');\r\n        addMessage(response.data.response, 'gpt');\r\n      } catch (error) {\r\n        if (error.response) {\r\n          const errorMessage = error.response.status === 401\r\n            ? 'Unauthorized: Check your API credentials.'\r\n            : `Error: ${error.response.data.error}`;\r\n          addMessage(errorMessage, 'gpt');\r\n          console.error('Error Response:', error.response.data);\r\n        } else {\r\n          addMessage('Error communicating with the server.', 'gpt');\r\n          console.error('Error:', error.user_message);\r\n        }\r\n      } finally {\r\n        setIsTyping(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <element class=\"chat\">\r\n\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-messages\">\r\n        {conversation.map((message, index) => (\r\n          <div key={index} className={`chat-message ${message.sender === 'gpt' ? 'chat-right' : 'chat-left'}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        {isTyping && (\r\n          <div className=\"chat-message chat-right typing-indicator\">\r\n            <div className=\"dot\"></div>\r\n            <div className=\"dot\"></div>\r\n            <div className=\"dot\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type your message here...\"\r\n        value={userInput}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n      <p className=\"disclaimer\">CourseForge can make mistakes. Check important info.</p>\r\n    </div>\r\n    </element>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}